package com.taskdesignsinc.android.myanimeviewer.model;

import com.taskdesignsinc.android.myanimeviewer.util.Constants;

import java.util.Comparator;

import io.objectbox.annotation.Entity;
import io.objectbox.annotation.Id;
import io.objectbox.annotation.Generated;
import io.objectbox.annotation.apihint.Internal;

@Entity
public class DownloadRecord {
    @Id
    private long id = 0;
    private String title = "";
    private String animeUrl = "";
    private String episodeUrl = "";
    private long timeStamp = -1;
    private long progress = 0;
    private long size = 0;
    private String path = "";
    private int status = 0;
    private int position = -1;

    @Generated(1190050140)
    @Internal
    /** This constructor was generated by ObjectBox and may change any time. */
    public DownloadRecord(long id, String title, String animeUrl, String episodeUrl,
            long timeStamp, long progress, long size, String path, int status, int position) {
        this.id = id;
        this.title = title;
        this.animeUrl = animeUrl;
        this.episodeUrl = episodeUrl;
        this.timeStamp = timeStamp;
        this.progress = progress;
        this.size = size;
        this.path = path;
        this.status = status;
        this.position = position;
    }

    @Generated(155491740)
    public DownloadRecord() {
    }

    public long getId() {
        return id;
    }

    public void setId(long pID) {
        id = pID;
    }

    public String getAnimeUrl() {
        return animeUrl;
    }

    public void setAnimeUrl(String animeUrl) {
        this.animeUrl = animeUrl;
    }

    public String getEpisodeUrl() {
        return episodeUrl;
    }

    public void setEpisodeUrl(String episodeUrl) {
        this.episodeUrl = episodeUrl;
    }

    public long getTimeStamp() {
        return timeStamp;
    }

    public void setTimeStamp(long pTimeStamp) {
        timeStamp = pTimeStamp;
    }

    /**
     * @return the title
     */
    public String getTitle() {
        return title;
    }

    /**
     * @param title the title to set
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * @return the progress
     */
    public long getProgress() {
        return progress;
    }

    /**
     * @param progress the progress to set
     */
    public void setProgress(long progress) {
        this.progress = progress;
    }

    /**
     * @return the size
     */
    public long getSize() {
        return size;
    }

    /**
     * @param size the size to set
     */
    public void setSize(long size) {
        this.size = size;
    }

    /**
     * @return the path
     */
    public String getPath() {
        return path;
    }

    /**
     * @param path the path to set
     */
    public void setPath(String path) {
        this.path = path;
    }

    public int getStatus() {
        return status;
    }

    public void setStatus(int mStatus) {
        this.status = mStatus;
    }

    public boolean isCompleted() {
        return status == Constants.DownloadIntents.SubTypes.COMPLETED;
    }

    public boolean isPaused() {
        return status == Constants.DownloadIntents.SubTypes.PAUSED;
    }

    public int getPosition() {
        return position;
    }

    public void setPosition(int mPosition) {
        this.position = mPosition;
    }

    public enum Order implements Comparator<DownloadRecord> {
        ByTimeStampASC() {
            @Override
            public int compare(DownloadRecord pRecord1, DownloadRecord pRecord2) {

                int diff = (int) (pRecord1.getTimeStamp() - pRecord2.getTimeStamp());

                // ascending order
                return diff;
            }
        },
        ByTimeStampDESC() {
            @Override
            public int compare(DownloadRecord pRecord1, DownloadRecord pRecord2) {

                int diff = (int) (pRecord2.getTimeStamp() - pRecord1.getTimeStamp());

                // ascending order
                return diff;
            }
        },
        ByPosition() {
            @Override
            public int compare(DownloadRecord pRecord1, DownloadRecord pRecord2) {

                int diff = (int) (pRecord1.getId() - pRecord2.getId());

                // ascending order
                return diff;
            }
        }
    }
}
